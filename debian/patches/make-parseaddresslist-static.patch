--- a/Mail-1.4.1/Mail/RFC822.php
+++ b/Mail-1.4.1/Mail/RFC822.php
@@ -60,7 +60,8 @@
  * How do I use it?
  *
  * $address_string = 'My Group: "Richard" <richard@localhost> (A comment), ted@example.com (Ted Bloggs), Barney;';
- * $structure = Mail_RFC822::parseAddressList($address_string, 'example.com', true)
+ * $parser = new Mail_RFC822();
+ * $structure = $parser->parseAddressList($address_string, 'example.com', true);
  * print_r($structure);
  *
  * @author  Richard Heyes <richard@phpguru.org>
@@ -172,11 +173,6 @@
      */
     public function parseAddressList($address = null, $default_domain = null, $nest_groups = null, $validate = null, $limit = null)
     {
-        if (!isset($this) || !isset($this->mailRFC822)) {
-            $obj = new Mail_RFC822($address, $default_domain, $nest_groups, $validate, $limit);
-            return $obj->parseAddressList();
-        }
-
         if (isset($address))        $this->address        = $address;
         if (isset($default_domain)) $this->default_domain = $default_domain;
         if (isset($nest_groups))    $this->nestGroups     = $nest_groups;
--- a/Mail-1.4.1/tests/9137_2.phpt
+++ b/Mail-1.4.1/tests/9137_2.phpt
@@ -18,7 +18,8 @@
 for ($i = 0; $i < count($addresses); $i++) {
     // construct the address
     $address = $addresses[$i]['raw'];
-    $parsedAddresses = Mail_RFC822::parseAddressList($address);
+    $parser = new Mail_RFC822();
+    $parsedAddresses = $parser->parseAddressList($address);
     if (PEAR::isError($parsedAddresses)) {
         echo $address." :: Failed to validate\n";
     } else {
--- a/Mail-1.4.1/tests/9137.phpt
+++ b/Mail-1.4.1/tests/9137.phpt
@@ -18,7 +18,8 @@
     $address = "\"" . addslashes($addresses[$i]['name']) . "\" ".
         "<".$addresses[$i]['email'].">";
 
-    $parsedAddresses = Mail_RFC822::parseAddressList($address);
+    $parser = new Mail_RFC822();
+    $parsedAddresses = $parser->parseAddressList($address);
     if (is_a($parsedAddresses, 'PEAR_Error')) {
         echo $address." :: Failed to validate\n";
     } else {
--- a/Mail-1.4.1/tests/bug17178.phpt
+++ b/Mail-1.4.1/tests/bug17178.phpt
@@ -4,7 +4,8 @@
 <?php
 require "Mail/RFC822.php";
 
-var_dump(Mail_RFC822::parseAddressList("empty-group:;","invalid",false,false)); 
+$parser = new Mail_RFC822();
+var_dump($parser->parseAddressList("empty-group:;","invalid",false,false));
 
 --EXPECT--
 array(0) {
--- a/Mail-1.4.1/tests/bug17317.phpt
+++ b/Mail-1.4.1/tests/bug17317.phpt
@@ -4,9 +4,10 @@
 <?php
 require "Mail/RFC822.php";
 
-$result[] = Mail_RFC822::parseAddressList('.name@example.com');
-$result[] = Mail_RFC822::parseAddressList('name.@example.com');
-$result[] = Mail_RFC822::parseAddressList('name..name@example.com');
+$parser = new Mail_RFC822();
+$result[] = $parser->parseAddressList('.name@example.com');
+$result[] = $parser->parseAddressList('name.@example.com');
+$result[] = $parser->parseAddressList('name..name@example.com');
 
 foreach ($result as $r) {
     if (is_a($r, 'PEAR_Error')) {
